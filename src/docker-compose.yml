version: '3.8'

services:
  postgres:
    container_name: postgres
    build:
      context: ./WebTech/WebTech.Backend/Postgres
      dockerfile: Dockerfile
      args:
        - POSTGRES_DB_USERNAME=arg_value
        - POSTGRES_DB_PASSWORD=arg_value
    ports:
      - '5432:5432'
    image: postgres
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
  
  redis:
    container_name: redis
    build:
      context: ./WebTech/WebTech.Backend/Redis
      dockerfile: Dockerfile
    restart: always
    ports:
      - '6379:6379'

  backend:
    container_name: webTech
    build:
      context: ./WebTech/WebTech.Backend/WebTech
      dockerfile: Dockerfile
      args:
        - POSTGRES_DB_USERNAME=arg_value
        - POSTGRES_DB_PASSWORD=arg_value
        - JWT_SECRET=arg_value
    image: benotar/web.tech.backend
    ports:
      - '5000:80'
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDevelopment
    depends_on:
      - postgres
      - redis
    restart: always

  frontend:
    container_name: webTechFrontend
    build:
      context: ./WebTech/WebTech.Frontend
      dockerfile: Dockerfile
    image: benotar/web.tech.frontend
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - backend

volumes:
  db_data: